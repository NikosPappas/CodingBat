//1. helloname
public String helloName(String name) {
  return "Hello "+name+"!";
}
//2. makeAbba 
public String makeAbba(String a, String b) {
  return a+b+b+a;
}
//3. makeTags 
public String makeTags(String tag, String word) {
  return "<"+tag+">"+word+"</"+tag+">";
}
//4. makeOutWord 
public String makeOutWord(String out, String word) {
  return out.substring(0,out.length()/2)
  +word+out.substring(out.length()/2,out.length());
}
//5.extraEnd 
public String extraEnd(String str) {
  String sub=str.substring(str.length()-2,str.length());
  return sub+sub+sub;
}
//6.firstTwo 
public String firstTwo(String str) {
  if(str.length()<2){
    return str;
  }
   else if(str.equals("")){
     return "";
     
   }
   else{
     return str.substring(0,2);
   }
}
//7.firstHalf 
public String firstHalf(String str) {
  return str.substring(0,str.length()/2);
}
//8.withoutEnd 
public String withoutEnd(String str) {
  return str.substring(1,str.length()-1);
}
//9.String-1 > comboString 
public String comboString(String a, String b) {
  if(a.length()<b.length()){
    return a+b+a;
  }
  else{
    return b+a+b;
  }
}
//10.nonStart
public String nonStart(String a, String b) {
  if(a.length()==1){
    return b.substring(1,b.length());
  }
  else if(b.length()==1){
    return  a.substring(1,a.length());
  }
  else{
    return a.substring(1,a.length())+b.substring(1,b.length());
  }
}
//11.left2
public String left2(String str) {
  if(str.length()==2){
    return str;
  }
  else{
    return str.substring(2,str.length())+str.substring(0,2);
  }
}
//12.right2 
 else{
   return str.substring(str.length()-2,str.length())+str.substring(0,str.length()-2);
 }
//.13 theEnd 
public String theEnd(String str, boolean front) {
  if(front){
    return str.substring(0,1);
  }
  else{
    return str.substring(str.length()-1,str.length());
  }
}
//14.Given a string, return a version without both the first and last char of the string. 
// The string may be any length, including 0.
public String withouEnd2(String str) {
  if(str.length()==0){
    return "";
  }
  else if(str.length()==1){
    return "";
  }
  else{
    return str.substring(1,str.length()-1);
  }
}
//15.middleTwo 
public String middleTwo(String str) {
  if(str.length()==2){
    return str;
  }
  else{
    return str.substring((str.length()/2)-1,(str.length()/2)+1);
  }
}
//16.endsLy 
public boolean endsLy(String str) {
if(str.equals("") || str.length()<2){
  return false;
}
else if(str.length()==2){
  if(str.equals("ly")){
    return true;
  }
  else {
    return false;
 }
}
else {
   return str.substring(str.length()-2,str.length()).equals("ly");
 }
}
//17.nTwice 
public String nTwice(String str, int n) {
  if(n==0){
    return "";
  }
  else{
    return str.substring(0,n)+str.substring(str.length()-n,str.length());
  }
}
//18. twoChar
public String twoChar(String str, int index) {
  if(str.length()<=index+1 || index<0){
    return str.substring(0,2);
  }
  else{
    return str.substring(index,index+2);
  }
}
//19.middleThree 
public String middleThree(String str) {
  if(str.length()==3){
    return str;
  }
  else{
    int len=str.length()/2;
    return str.substring(len-1,len)+str.substring(len,len)+str.substring(len,len+2);
  }
}
//20.hasBad 
public boolean hasBad(String str) {
  if(str.length()<3){
    return false;
  }
  else if(str.substring(0,3).equals("bad")){
    return true;
  }
  else if (str.length() > 3){
	    if ((str.substring(1,4)).equals("bad"))
	      return true;
	  }
	   return false;
}
//21. atFirst 
public String atFirst(String str) {
  if(str.length()==0){
    return "@@";
  }
  else if(str.length()==1){
    return str+"@";
  }
  else if(str.length()==2){
    return str;
  }
  else{
    return str.substring(0,2);
  }
}
//22.lastChars 
public String lastChars(String a, String b) {
  if(a.length()==0){
    a="@";
  }
  if(b.length()==0){
    b="@";
  }
    return a.substring(0,1)+b.substring(b.length()-1,b.length());
}
//23. conCat 
public String conCat(String a, String b) {
  if(b.equals("")){
    return a;
  }
  else if(a.equals("")){
    return b;
  }
  if(a.charAt(a.length()-1)==b.charAt(0)){
    return a.substring(0,a.length()-1)+b;
  }
  else{
    return a+b;
  }
}
//24.lastTwo 
public String lastTwo(String str) {
  if(str.equals("")){
    return "";
  }
  else if(str.length()==1){
    return str;
  }
  else if(str.length()==2){
    return str.substring(1,2)+str.substring(0,1);
  }
  else{
    return str.substring(0,str.length()-2)+
    str.charAt(str.length()-1)+str.charAt(str.length()-2);
  }
}
//25. seeColor
public String seeColor(String str) {
  if(str.indexOf("red")==0){
    return "red";
  }
  else if(str.indexOf("blue")==0){
    return "blue";
  }
  else{
    return "";
  }
}
//26. frontAgain 
public boolean frontAgain(String str) {
  if(str.equals("")){
    return false;
  }
  else if(str.length()==1){
    return false;
  }
  else if(str.length()==2){
    return true;
  }
  else{
    if(str.substring(0,2).equals(str.substring(str.length()-2,str.length()))){
      return true;
    }
    else{
      return false;
    }
  }
}
//27. minCat
public String minCat(String a, String b) {
  if(a.equals("")){
    return "";
  }
  else if(b.equals("")){
    return "";
  }
  else if(a.length()==b.length()){
    return a+b;
  }
  else{
    if(a.length()>b.length()){
      int diff=a.length()-b.length();
      return a.substring(diff,a.length())+b;
    }
    else{
      int diff=b.length()-a.length();
      return a+b.substring(diff,b.length());
    }
  }
}
//28. extraFront 
public String extraFront(String str) {
  if(str.equals("")){
    return "";
  }
  else if(str.length()<2){
    return str+str+str;
  }
  else{
    String sub=str.substring(0,2);
    return sub+sub+sub;
  }
}
//29. without2
public String without2(String str) {
	  int len = str.length();
	  if (len == 2)
	    return "";
	  if (len < 2)
	    return str;
	  else {
	    if (str.substring(0,2).equals(str.substring(len-2, len)))
	      return str.substring(2,len);
	      else 
	      return str;
	  }
}
//30.deFront
public String deFront(String str) {    
  if(str.equals("")){
    return "";
  }
  else if(str.length()==1){
    return str;
  }
  else if(str.charAt(0)=='a'){
        if(str.charAt(1)=='b'){
          return str;
        }
        else{
          return str.charAt(0)+str.substring(2,str.length());
        }
  }
  else if(str.charAt(1)=='b'){
       return str.substring(1,str.length());
  }
  else{
    return str.substring(2,str.length());
  }
}


//31.startWord 
public String startWord(String str, String word) {
  if(str.equals("")){return "";}
  if(str.length()<word.length()){return "";}
  if(word.length()==1){
    return str.substring(0,1);
  }
  else{
    int len=word.length();
    String substring=str.substring(0,len);
    if(substring.equals(word)){
      return word;
    }
    else if(str.substring(1,len).equals(word.substring(1,len))){
      return str.substring(0,len);
    }
    else{
      return "";
    }
  }
}
//32. withoutX 
public String withoutX(String str) {
  int len=str.length();
  if(str.equals("") || str.length()==1 ){
    return "";
  }
  else if(str.charAt(0)=='x' && str.charAt(len-1)=='x'){
    return str.substring(1,len-1);
  }
  else if(str.charAt(0)=='x' && str.charAt(len-1)!='x'){
    return str.substring(1,len);
  }
  else if(str.charAt(len-1)=='x'){
    return str.substring(0,len-1);
  }
  else{
    return str;
  }
}
//33. withoutX2
public String withoutX2(String str) {
  if(str.equals("")){
    return "";
  }
  else if(str.length()==1){
    return "";
  }
  else if(str.charAt(0)=='x'){
      if(str.charAt(1)=='x'){
        return str.substring(2,str.length());
      }
      else{
        return str.substring(1,str.length());
      }
  }
  else if(str.charAt(1)=='x'){
    return str.substring(0,1)+str.substring(2,str.length());
  }
  else{
    return str;
  }
}

